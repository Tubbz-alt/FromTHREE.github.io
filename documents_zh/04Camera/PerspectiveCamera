# PerspectiveCamera透视相机 #
使用透视投影的相机。这种投影模式跟人眼模式相近。这种投影模式是渲染3D场景最通用的投影模式。
## 构造函数 ##
PerspectiveCamera(fov, aspect, near, far)
fov -- 相机视锥的垂直视野
aspect -- 相机视锥的长宽比
near - 相机视锥的远面
## 属性 ##
*以下属性做任何改变，只有调用updateProjectionMatrix后，才会生效。*
** far **
视锥远面，默认为2000，有效取值范围为near-Infinity。
** filmGauge **
用于较大轴的胶片尺寸。 默认值是35（毫米）。 除非filmOffset设置为非零值，否则此参数不会影响投影矩阵。
** fileOffset **
与filmGauge相同单位的水平偏心偏移。 缺省值是0。
** focus **
用于立体视觉和景深效果的对象距离。 除非正在使用3D相机StereoCamera，否则此参数不会影响投影矩阵。 缺省值是10。
** fov **
相机视锥的垂直视野，单位为度，默认为50.
** isPerspectiveCamera **
用来测试是否是透视相机或派生自投影相机，默认为true，不应该被修改。
** near **
相机视锥的近平面，默认为0.1，合法范围为大于0的且小于far的值，不同于正交相机，0是一个非法值。
** view **
指定的视窗或null，通过setViewOffset方法设置，可以通过clearViewOffset清除。
** zoom **
获取或设置相机的zoom因子，默认为1.
## 方法 ##
** clearViewOffset() **
清除所有通过setViewOffset设置的偏移。
** getEffetiveFOV() **
返回当前的垂直视野角度，考虑zoom因素。
** getFilmHeight() **
返回胶片高度。 如果aspect大于或等于1（肖像格式），则结果等于.filmGauge。
** getFilmWidth() **
返回胶片宽度。 如果aspect大于或等于1（横向格式），则结果等于.filmGauge。
** getFocalLength() **
返回当前.fov相对于.filmGauge的焦距。
** setFocalLength() **
设置当前.fov相对于.filmGauge的焦距。
默认情况下，焦距是为35毫米（全画幅）相机指定的。
** setViewOffset(fullWidth, fullHeight, x, y, width, height) **
fullWidth -- 多视角设置的全宽
fullHeight-- 多视角设置的全高
x -- 子照相机的水平偏移
y -- 子照相机的垂直偏移
width -- 子照相机的宽度
height -- 子照相机的高度
在一个较大的视锥里设置一个偏移，这对于多窗口或多显示器/多机设置是有用的。
`+---+---+---+`
`| A | B | C |`
`+---+---+---+`
`| D | E | F |`
`+---+---+---+`
`var w = 1920;`
`var h = 1080;`
`var fullWidth = w * 3;`
`var fullHeight = h * 2;`
`camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );//A`
`camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );//B`
`camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );//C`
`camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );//D`
`camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );//E`
`camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );//F`
** updateProjectionMatrix() **
更新相机投影矩阵，相机属性有任何改变，都必须被调用才会使属性改变生效。
** toJSON() **
返回相机数据的JSON格式。
